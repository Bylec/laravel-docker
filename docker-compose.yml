version: "3.7"

networks:
  laravel-test-network:
    driver: bridge

services:
  app:
    build:
      args:
        user: tomasz
        uid: 1000
      context: ./
      dockerfile: Dockerfile
    image: bylec/laravel-test
    container_name: laravel-test-app
    restart: unless-stopped
    working_dir: /var/www/
    volumes:
      - ./:/var/www
    networks:
      - laravel-test-network
  db:
    image: mysql:5.7
    container_name: laravel-test-app-db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    ports:
      - 3307:3306
    volumes:
      - ./docker-compose/mysql:/docker-entrypoint-initdb.d
      - ./docker-compose/mysql/data:/var/lib/mysql
    networks:
      - laravel-test-network
  nginx:
    image: nginx:1.17-alpine
    container_name: laravel-test-app-nginx
    restart: unless-stopped
    ports:
      - 8000:80
    volumes:
      - ./:/var/www
      - ./docker-compose/nginx:/etc/nginx/conf.d
    networks:
      - laravel-test-network
  mogodb:
    container_name: laravel-test-app-mongodb
    image: mongo:latest
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: ${MONGO_DB_DATABASE}
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_DB_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_DB_PASSWORD}
    volumes:
      - ./docker-compose/mongo:/data/db
  redis:
    image: "redis:alpine"
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - laravel-test-network
